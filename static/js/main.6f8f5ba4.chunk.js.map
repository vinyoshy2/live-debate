{"version":3,"sources":["data/images/candidates.png","data/images/interface_screenie.png","components/consent/consent.js","components/instructions/instructions.js","components/pre-survey/pre-survey.js","components/second-instructions/second-instructions.js","components/video/video.js","components/comments/comments.js","components/video-comments/video-comments.js","components/post-survey/post-survey.js","components/end-slide/end-slide.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Consent","class","align","href","to","Instructions","this","props","mode","React","Component","Presurvey","state","passcode","handlePassCode","bind","event","setState","target","value","where","bias","src","width","height","for","type","id","onChange","trim","SecondInstructions","candidates","screenshot","Video","video_start","complete","addNext","cur","Date","getTime","next_button","videoId","opts","playerVars","autoplay","controls","fs","modestbranding","start","end","onEnd","Comments","comJSON","commentJSON","commentpoJSON","comments","map","comment","key","index","indexOf","user","text","CommentAsync","VideoComments","filterJSON","addComments","addAndReturn","y","intervalID","setInterval","clearInterval","to_filter","i","new_comments","length","unshift","concat","dict","val","position","onClick","activation_time","Comment","x","diff_ms","diff_min","Math","round","Postsurvey","EndSlide","App","attempt","sessionStorage","getItem","random","setItem","attempt_bias","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wpnDAAAA,EAAOC,QAAU,IAA0B,wC,qBCA3CD,EAAOC,QAAU,IAA0B,gD,gYCM5B,SAASC,IACtB,OACE,yBAAKC,MAAM,WACL,wBAAIC,MAAM,UAAV,oCACP,oGACA,uIAEG,mQACA,4BACC,4LACA,0HACA,yJACA,qIALD,iYAUH,kEACA,mRACA,8TAEA,+EACA,qFAEA,iEACA,kHAEA,iEACA,oJAEA,oEACA,4LAEA,iEACA,sFAEA,6EACA,+FAEA,2DACA,8VAAgU,uBAAGC,KAAK,sGAAR,iDAAhU,uXAEA,wEACA,oIAEA,iEACA,8lBAEA,yDACA,2iBAEG,+PAII,kBAAC,IAAD,CAAMC,GAAG,iBACP,4BAAQH,MAAM,kBAAd,c,UCxDSI,E,uKAEpB,OAAuB,GAAnBC,KAAKC,MAAMC,KAEA,yBAAKP,MAAM,gBACP,4CACP,4BACI,mFAAwD,2CAAxD,2HAAmM,2CAAnM,iEACA,wDAA6B,kDAA7B,gKAAoN,yEAApN,kEACA,kHAAuF,sDAAvF,qBAAuI,+CAAvI,0HAEG,kBAAC,IAAD,CAAMG,GAAG,eACL,4BAAQH,MAAM,uBAAd,UAQR,yBAAKA,MAAM,gBACP,4CACP,4BACI,mFAAwD,2CAAxD,iIAAyM,2CAAzM,iEACA,wDAA6B,kDAA7B,2FACP,sHAA2F,2FAA3F,gBAA2K,gDAA3K,qEACO,4FAAiE,6EAAjE,yCAA4J,sDAA5J,4EAAmQ,2CAAnQ,gEACA,kHAAuF,sDAAvF,qBAAuI,+CAAvI,0HAEG,kBAAC,IAAD,CAAMG,GAAG,eACL,4BAAQH,MAAM,uBAAd,c,GA9BkBQ,IAAMC,W,OCH3BC,G,wDAEjB,WAAYJ,GAAQ,IAAD,8BACf,cAAMA,IACJK,MAAQ,CACTC,SAAW,IAEf,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,gBALJ,E,2DAQJC,GACXV,KAAKW,SAAS,CAAEJ,SAAWG,EAAME,OAAOC,U,+BAI3C,IAAIC,EAAM,IACNC,EAAK,IAOF,OANgB,GAAnBf,KAAKC,MAAMC,OACJY,EAAM,KAEM,GAAnBd,KAAKC,MAAMc,OACJA,EAAK,KAGlB,yBAAKpB,MAAM,aACM,4BAAQqB,IAAK,4EAA4EF,EAAM,SAASC,EAAME,MAAM,OAAOC,OAAO,SAChJ,kKACA,2BAAOC,IAAI,kBAAX,cACA,2BAAOC,KAAK,OAAOC,GAAG,iBAAiBC,SAAUtB,KAAKQ,iBACrB,QAA9BR,KAAKM,MAAMC,SAASgB,OACZ,kBAAC,IAAD,CAAMzB,GAAG,wBACF,4BAAQH,MAAM,cAAd,SAGG,mC,GAlCYQ,IAAMC,Y,0CCKxBoB,E,uKAEpB,OAAuB,GAAnBxB,KAAKC,MAAMC,KAEA,yBAAKP,MAAM,sBACP,kDACd,yBAAKA,MAAM,eACA,4BACH,uMAA4K,6BAAK,yBAAKqB,IAAKS,IAAYP,OAAO,UAA9M,KACO,6QACA,4BAAI,mFAAJ,KACA,qFAA0D,yDAA1D,+CAEX,yBAAKF,IAAKU,IAAYL,GAAG,aAEf,kBAAC,IAAD,CAAMvB,GAAG,mBACL,4BAAQH,MAAM,iBAAd,UAQR,yBAAKA,MAAM,sBACrB,kDACO,4BACC,uMAA4K,6BAAK,yBAAKqB,IAAKS,IAAYP,OAAO,UAA9M,KACG,qFAA0D,yDAA1D,8CACd,oOAEiB,kBAAC,IAAD,CAAMpB,GAAG,UACL,4BAAQH,MAAM,iBAAd,c,GAhCwBQ,IAAMC,W,gBCDjCuB,E,kDACjB,WAAY1B,GAAQ,IAAD,8BACf,cAAMA,IACRK,MAAQ,CACTsB,YAAa,EACbC,UAAU,GAEd,EAAKC,QAAU,EAAKA,QAAQrB,KAAb,gBANO,E,gEAUtB,IAAIsB,GAAM,IAAIC,MAAOC,UACdjC,KAAKW,SAAS,CAACiB,YAAaG,M,gCAI5B/B,KAAKW,SAAS,CAACkB,UAAU,M,+BAIzB,IAWHK,EAMG,OAJIA,EADPlC,KAAKM,MAAMuB,SACU,kBAAC,IAAD,CAAM/B,GAAG,aAAY,4BAAQH,MAAM,gBAAd,WAErB,8BAGxB,yBAAKA,MAAM,eACA,kBAAC,IAAD,CAASwC,QAAQ,cAAcC,KAnBf,CACjBC,WAAY,CACRC,SAAU,EACVC,SAAU,EACVC,GAAI,EACJC,eAAgB,EAChBC,MAAO,EACPC,IAAK,MAY2CC,MAAO5C,KAAK8B,UACrEI,O,GAxC4B/B,IAAMC,W,wBCCpByC,E,kDACjB,WAAY5C,GAAQ,IAAD,sBACf,cAAMA,GACb,IAAI6C,EAAUC,EAFQ,OAGC,GAAnB,EAAK9C,MAAMc,OACJ+B,EAAUE,GAErB,EAAK1C,MAAQ,CACT2C,SAAUH,EAAO,SAPC,E,sDAYf9C,KAAKW,SAAS,CAACkB,UAAU,M,+BAGnB,IACTK,EADQ,OAGL,OADAA,EAAc,kBAAC,IAAD,CAAMpC,GAAG,gBAAe,4BAAQH,MAAM,mBAAd,WAE5C,6BACW,yBAAKA,MAAM,iBACbK,KAAKM,MAAM2C,SAASC,KAAI,SAAAC,GAAO,OAAI,kBAAC,EAAD,CACvCC,IAAK,EAAK9C,MAAM+C,MAAQ,EAAK/C,MAAM2C,SAASK,QAAQH,GAC/BI,KAAMJ,EAAO,KAClCK,KAAML,EAAO,WAGbjB,O,GA5B+B/B,IAAMC,WAoCtCqD,E,uKAEE,OACI,yBAAK9D,MAAM,iBACrB,yBAAKA,MAAM,cAAcK,KAAKC,MAAMsD,MACpC,yBAAK5D,MAAM,sBAAsBK,KAAKC,MAAMuD,W,GALnBrD,IAAMC,WCnCZsD,G,wDACjB,WAAYzD,GAAQ,IAAD,EAElB6C,EAFkB,oBAIXA,EADY,IAFhB,cAAM7C,IAEJA,MAAMc,KACMgC,EAEAC,EAErB,EAAK1C,MAAQ,CACTsB,YAAa,EACbyB,MAAO,EACPJ,SAAU,GACVH,QAASA,EACTjB,UAAU,GAEd,EAAK8B,WAAa,EAAKA,WAAWlD,KAAhB,gBAClB,EAAKmD,YAAc,EAAKA,YAAYnD,KAAjB,gBACnB,EAAKoD,aAAe,EAAKA,aAAapD,KAAlB,gBACpB,EAAKqB,QAAU,EAAKA,QAAQrB,KAAb,gBACf,IAAIqD,EAAI,EACGC,EAAaC,aACvB,WACkB,EAAKJ,cACM,OAALE,GACFG,cAAcF,KAE1B,KA1BW,S,gEA8BtB,IAAIhC,GAAM,IAAIC,MAAOC,UACdjC,KAAKW,SAAS,CAACiB,YAAaG,M,iCAGrBmC,EAAWtC,GAClB,IACHuC,EADOC,EAAe,GAEnB,IAAKD,EAAInE,KAAKM,MAAM+C,MAAOc,EAAID,EAAS,QAAYG,OAAQF,IAAK,CAC7D,IAAIhB,EAAUe,EAAS,QAAYC,GAEnC,MADQ,IAAInC,MAAOC,UACHL,GAAgBuB,EAAO,iBAGnC,MAFPiB,EAAaE,QAAQnB,GAM7B,OADAnD,KAAKW,SAAS,CAAC0C,MAAOc,IACfC,I,oCAIA,IAAIA,EAAepE,KAAK2D,WAAW3D,KAAKM,MAAMwC,QAAS9C,KAAKM,MAAMsB,aACzE5B,KAAKW,SAAS,CAACsC,SAAUmB,EAAaG,OAAOvE,KAAKM,MAAM2C,c,mCAGxCuB,EAAMpB,EAAKqB,GAE3B,OADOD,EAAKpB,GAAOqB,EACZD,I,gCAIAxE,KAAKW,SAAS,CAACkB,UAAU,M,+BAGnB,IAeTK,EAfQ,OAqBL,OAJIA,EADPlC,KAAKM,MAAMuB,SACU,kBAAC,IAAD,CAAM/B,GAAG,gBAAe,4BAAQH,MAAM,aAAd,WAExB,8BAGd,6BACC,yBAAKA,MAAM,WAClB,yBAAKA,MAAM,SACL,kBAAC,IAAD,CAASwC,QAAQ,cAAcC,KAxBd,CACxBsC,SAAU,WACVxD,OAAQ,QACRD,MAAO,kBACAoB,WAAY,CACRC,SAAU,EACVC,SAAU,EACVC,GAAI,EACJC,eAAgB,EAChBC,MAAO,EACPC,IAAK,MAc0CC,MAAO5C,KAAK8B,WAErE,4BAAQnC,MAAM,UAAUgF,QAAS3E,KAAK4D,aAAtC,oBAGO,yBAAKjE,MAAM,gBACbK,KAAKM,MAAM2C,SAASC,KAAI,SAAAC,GAAO,OAAI,kBAAC,EAAD,CACvCC,IAAK,EAAK9C,MAAM+C,MAAQ,EAAK/C,MAAM2C,SAASK,QAAQH,GAC/BI,KAAMJ,EAAO,KAClCK,KAAML,EAAO,KACbyB,gBAAiBzB,EAAO,gBACxBvB,YAAa,EAAKtB,MAAMsB,mBAKxBM,O,GA1GoC/B,IAAMC,YAkH3CyE,E,kDACF,WAAY5E,GAAQ,IAAD,uBACf,cAAMA,IACRK,MAAQ,CACFyB,KAAK,IAAIC,MAAOC,WAE3B,IAAI6C,EAAI,EACGf,EAAaC,aACvB,WACkB,EAAKrD,SAAS,CAACoB,KAAK,IAAIC,MAAOC,YACpB,MAAL6C,GACFb,cAAcF,KAE1B,KAZW,S,qDAetB,IAAIgB,EAAU/E,KAAKM,MAAMyB,IAAM/B,KAAKC,MAAM2B,YAAc5B,KAAKC,MAAM2E,gBAC/DI,EAAWC,KAAKC,MAAQH,EAAU,MAAY,KAAW,KACtD,OACI,yBAAKpF,MAAM,WACrB,yBAAKA,MAAM,QAAQK,KAAKC,MAAMsD,MAC9B,yBAAK5D,MAAM,cAAcqF,EAAzB,gBACA,yBAAKrF,MAAM,gBAAgBK,KAAKC,MAAMuD,W,GAtBlBrD,IAAMC,WCxHP+E,G,wDACjB,WAAYlF,GAAQ,IAAD,8BACf,cAAMA,IACJK,MAAQ,CACTC,SAAW,IAEf,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,gBALJ,E,2DAQJC,GACXV,KAAKW,SAAS,CAAEJ,SAAWG,EAAME,OAAOC,U,+BAG3C,IAAIC,EAAM,IACNC,EAAK,IAON,OANuB,GAAnBf,KAAKC,MAAMC,OACXY,EAAM,KAEU,GAAnBd,KAAKC,MAAMc,OACRA,EAAK,KAGL,yBAAKpB,MAAM,cACP,4BAAQqB,IAAK,4EAA4EF,EAAM,SAASC,EAAME,MAAM,OAAOC,OAAO,SACxI,4JACA,2BAAOC,IAAI,mBAAX,qBACA,2BAAOC,KAAK,OAAOC,GAAG,kBAAkBC,SAAUtB,KAAKQ,iBACtB,QAA9BR,KAAKM,MAAMC,SAASgB,OAChB,kBAAC,IAAD,CAAMzB,GAAG,cACF,4BAAQH,MAAM,eAAd,SAGG,mC,GAhCaQ,IAAMC,Y,MCA/B,SAASgF,IACpB,OACI,yBAAKzF,MAAM,YACd,iGACO,6DACA,0SACA,+KACA,4vBACA,oqBACA,iL,YCKS0F,E,kDAGjB,WAAYpF,GAAQ,IAAD,8BACf,cAAMA,IACRK,MAAQ,CACFJ,KAAM,EACba,KAAM,GAJY,E,gEAQtB,IAAIuE,EAAUC,eAAeC,QAAQ,QACtB,MAAXF,IACCA,EAAUL,KAAKC,MAAMD,KAAKQ,UAC1BF,eAAeG,QAAQ,OAAQJ,IAE7BtF,KAAKW,SAAS,CAACT,KAAMoF,IAC5B,IAAIK,EAAeJ,eAAeC,QAAQ,QACtB,MAAhBG,IACCA,EAAeV,KAAKC,MAAMD,KAAKQ,UAC/BF,eAAeG,QAAQ,OAAQC,IAE7B3F,KAAKW,SAAS,CAACI,KAAM4E,M,+BAGrB,OACI,kBAAC,IAAD,KACH,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,KACP,kBAACnG,EAAD,CAASQ,MAAI,KAExB,kBAAC,IAAD,CAAO0F,OAAK,EAACC,KAAK,iBACd,kBAAC,EAAD,CAAc3F,KAAMF,KAAKM,MAAMJ,QAEnC,kBAAC,IAAD,CAAO0F,OAAK,EAACC,KAAK,eACd,kBAAC,EAAD,CAAW3F,KAAMF,KAAKM,MAAMJ,KAAMa,KAAMf,KAAKM,MAAMS,QAE9D,kBAAC,IAAD,CAAO6E,OAAK,EAACC,KAAK,wBACd,kBAAC,EAAD,CAAoB3F,KAAMF,KAAKM,MAAMJ,QAElC,kBAAC,IAAD,CAAO0F,OAAK,EAACC,KAAK,mBACd,kBAAC,EAAD,CAAe9E,KAAMf,KAAKM,MAAMS,QAE3C,kBAAC,IAAD,CAAO6E,OAAK,EAACC,KAAK,UACd,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,aACrB,kBAAC,EAAD,CAAU9E,KAAMf,KAAKM,MAAMS,QAEjB,kBAAC,IAAD,CAAO6E,OAAK,EAACC,KAAK,gBACd,kBAAC,EAAD,CAAY3F,KAAMF,KAAKM,MAAMJ,KAAMa,KAAMf,KAAKM,MAAMS,QAE/D,kBAAC,IAAD,CAAO6E,OAAK,EAACC,KAAK,cACd,kBAACT,EAAD,a,GArDuBjF,IAAMC,WCLnB0F,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.6f8f5ba4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/candidates.f4d7247c.png\";","module.exports = __webpack_public_path__ + \"static/media/interface_screenie.0846cddd.png\";","import React from 'react';\nimport './consent.css';\nimport {\n\tLink\n} from \"react-router-dom\";\n\nexport default function Consent() {\n  return (\n    <div class=\"Consent\">\n          <h1 align='center'>Online Informed Consent Document</h1>\n\t  <p>Project Title: Measuring Ability of Politicians to Communicate Policy</p>\n\t  <p>Principle Investigator: Karrie Karahalios (Computer Science, University of Illinois at Urbana-Champaign)</p>\n\n      <p>You are being asked to participate in a voluntary research study. The purpose of this study is to understand how effectively politicians are able to communicate their positions on policy. Participating in this study will involve:\n      <ol>\n\t      <li>A pre-survey in which you will provide some demographic information, and answer a few questions about your political views and enagement level. (~1 minutes)</li>\n\t      <li>Watching a 12-minute debate clip and read comments posted about that clip (~10-15 minutes)</li>\n\t      <li>A post-survey containing questions about your opinions on content expressed in the video/associated comments (~5 minutes)</li>\n\t      <li>After completing these components, you will receive an 8-digit completion code to submit on Prolific</li>\n\t  </ol>\t  \n\t  \n      and your participation will last around 20 minutes. Risks related to this research include only those normally encountered in your daily life; benefits related to this research include a better understand how policy positions can better be conveyed to Americans, leading to a more informed populace. The alternative to participating in this study is to return the task on Prolific.</p>\n\n\t  <h2>What is the purpose of this study?</h2>  \n\t  <p>This is a research study to be conducted at the Siebel Center at University of Illinois.  We are inviting you to participate in this research study because you have indicated that you have watched a Democratic debate some time in the last year.</p>\n\t  <p>The study aims to understand how effectively politicians are able to communicate their positions on policy. If you agree to participate, you will be asked to sign this informed consent document indicating that you have read the following form and have been given the goals of this study.</p>\n\t  \n\t  <h2>How many people will participate in this study?</h2>\n\t  <p>Approximately 200 people will take part in this study.</p>\t \n\t  \n\t  <h2>How long will I be in this study?</h2>\n\t  <p>If you agree to take part in this study, your involvement will be around 20 minutes</p> \n\t  \n\t  <h2>What are the risks of this study?</h2>\n\t  <p>While participating in this study, there are no foreseeable risks to you beyond those you encounter in every day life</p>\n\t  \n\t  <h2>What are the benefits of this study?</h2>\n\t  <p>The feedback received from the study will be used to understand how policy positions can better be conveyed to Americans, leading to a more informed populace</p>\n\t  \n\t  <h2>Will I be paid for participating?</h2>\n\t  <p>You will be paid $3.60 for participating in this study.</p>\n\t  \n\t  <h2>Will it cost me anything to be in this study?</h2>\n\t  <p>There are no costs for being in this study other than your time.</p>\n\t  \n\t  <h2>What about confidentiality?</h2>\n\t  <p>We will keep your participation in this research study confidential. However, it is possible that other people may become aware of your participation in the study. For example, representatives of the university committee and office that reviews and approves research studies, the Institutional Review Board (IRB) and <a href=\"https://directory.illinois.edu/detail?departmentId=illinois.eduNE344&search_type=all&skinId=0&sub=\">Office for Protection of Research Subjects</a>, Other representatives of the state and university responsible for ethical, regulatory, or financial  oversight of research, may inspect and copy records pertaining to this study. All personally identifiable data will only be reported in aggregate and will be deleted as soon as possible. Your survey responses will be stored on a secure sever, and will be anonymized.  </p>\n\t  \n\t  <h2>How will the data be used in the future?</h2>\n\t  <p>Your de-identified information could be used for future research without additional informed consent.</p>\n\t  \n\t  <h2>Is being in this study voluntary?</h2>\n\t  <p>Taking part in this research study is completely voluntary. You may choose not to take part at all.  However, you must be 18 or older in order to participate. If you decide to be in this study, you may stop participating at any time.  If you decide not to be in this study, or if you stop participating at any time, you won’t be penalized or lose any benefits for which you otherwise qualify. Your decision to participate, decline, or withdraw from participation will have no effect on your grades at, current status, or future relations with the University of Illinois.</p>\n\t  \n\t  <h2>What if I have questions?</h2>\n\t  <p>We encourage you to ask questions.  If you have any questions about the research study itself, please contact:  Karrie Karahalios at kkarahal@illinois.edu or call (217) 265-6841.  If you feel you have not been treated according to the descriptions in this form, or if you have any questions about your rights as a research subject, including questions, concerns, complaints, or to offer input, you may call the Office for the Protection of Research Subjects (OPRS) at 217-333-2670 or e-mail OPRS at irb@illinois.edu</p>\n\t  \n      <h3>I have read and understand the above consent form. I certify that I am 18 years\nold or older. By clicking the “I agree” button to enter the survey, I indicate my \nwillingness to voluntarily take part in this study.</h3>\n    \n          <Link to=\"/instructions\">\t  \n            <button class=\"button-consent\">\n\t      I agree!\n\t    </button>\n\t  </Link>\n    </div>\n  );\n}\n\n","import React from 'react';\nimport {\n\tLink\n} from \"react-router-dom\";\nimport \"./instructions.css\"\n\nexport default class Instructions extends React.Component {\n    render() {\n\tif (this.props.mode == 1) {\n            return (\n                <div class=\"Instructions\">\n                    <h1>Instructions</h1>\n\t            <ol>\n\t                <li>After hitting next, you will be asked to fill out a <b>short survey</b> about a few government policies. This should take only a few minutes. After completing this survey, you will receive a <b>4 digit code</b> you will need to enter in order to proceed to the next page </li> \n\t                <li>You will next be shown a <b>9-minute video clip</b> from a past Democratic debate. Attached to this video will be a a set of comments that were posted on the internet while the debate was being aired. Please <b>read the comments while watching the video</b>. When the video is done playing, you will be able to proceed.</li> \n\t                <li>At this point you will have completed the study! On this page you will be given an <b>8 digit completion code</b> you will need to <b>enter on Proflic</b> in order to receive payment for the study. Please direct any questions or concerns you have to vkoshy2@illinois.edu.</li>\n\t            </ol>\n                    <Link to=\"/pre-survey\">\n                        <button class=\"button-instructions\">\n\t                     Next\n\t                </button>\n\t            </Link>\n                </div>\n            );\n\t} else {\n              return (\n                <div class=\"Instructions\">\n                    <h1>Instructions</h1>\n\t            <ol>\n\t                <li>After hitting next, you will be asked to fill out a <b>short survey</b> about a few government policies. This should take only a few minutes or so. After completing this survey, you will receive a <b>4 digit code</b> you will need to enter in order to proceed to the next page </li> \n\t                <li>You will next be shown a <b>9-minute video clip</b> from a past Democratic debate. When the video is done playing, you will be to proceed.</li> \n\t\t        <li> After this you will be shown some comments posted by users when the debate was aired. <b>It is not expected that you read every comment word-for-word</b>, but please <b>spend 2-3 minutes</b> reading through the comments before proceeding to the next step </li>\n\t                <li>After the video is finished, you will be asked to complete a <b>questionnaire about the video and the comments</b> you were shown. We will collect some <b>demographic information</b> here as well. This should take a few minutes. You will again be given a <b>4 digit code</b> you will need to enter in order to proceed to the next page</li> \n\t                <li>At this point you will have completed the study! On this page you will be given an <b>8 digit completion code</b> you will need to <b>enter on Proflic</b> in order to receive payment for the study. Please direct any questions or concerns you have to vkoshy2@illinois.edu.</li>\n\t            </ol>\n                    <Link to=\"/pre-survey\">\n                        <button class=\"button-instructions\">\n\t                     Next\n\t                </button>\n\t            </Link>\n                </div>\n            );\n\t}\n    }\n}\n\n","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport \"./pre-survey.css\"\nexport default class Presurvey extends React.Component {\n\n    constructor(props) {\n        super(props);\n\t    this.state = {\n\t        passcode : \"\"\n\t    }\n\t    this.handlePassCode = this.handlePassCode.bind(this);\n    }\n    \n    handlePassCode(event) {\n        this.setState({ passcode : event.target.value });\n    }\n\n    render() {\n\t    var where=\"S\";\n\t    var bias=\"M\";\n\t    if (this.props.mode == 1) {\n                where=\"D\";\n            }\n\t    if (this.props.bias == 1) {\n                bias=\"P\";\n\t    }\n            return (\n\t\t <div class=\"Presurvey\">\n                    <iframe src={\"https://illinoisaces.co1.qualtrics.com/jfe/form/SV_3KT3AIUiAA0YunX?where=\"+where+\"&bias=\"+bias} width=\"100%\" height=\"100%\"></iframe>\n\t\t    <h2>Please complete the survey in the box above to receive the passcode. Enter the passcode in the box below to proceed to video clip.</h2>\n\t\t    <label for=\"passcode_entry\">Passcode: </label>\n\t\t    <input type=\"text\" id=\"passcode_entry\" onChange={this.handlePassCode}/>\n\t\t    { (this.state.passcode.trim() == \"6499\") ?\n    \t            <Link to=\"/second-instructions\">\n                        <button class=\"button-pre\">\n\t                        Next\n                        </button>\n\t                </Link> : <div/>\n\t\t    }\n                 </div>\n            );\n    }\n}\n\n","import React from 'react';\nimport {\n\tLink\n} from \"react-router-dom\";\nimport \"./second-instructions.css\"\nimport screenshot from \"../../data/images/interface_screenie.png\";\nimport candidates from \"../../data/images/candidates.png\";\n\nexport default class SecondInstructions extends React.Component {\n    render() {\n\tif (this.props.mode == 1) {\n            return (\n                <div class=\"SecondInstructions\">\n                    <h1>Video Instructions</h1>\n\t\t    <div class=\"InstWrapper\">\n\t                <ol>\n\t\t            <li>The video you are about to watch is a clip from a previous Democratic debate with discussion around healthcare policy. The following candidates will speak in the video:<br/><img src={candidates} height=\"150px\"/> </li>\n\t                    <li>On the right is a screenshot of the interface you will see on the next page. Comments will auto-load every few seconds around 1 minute into the video. You may press the \"Refresh comments\" button to have comments load in more frequently. </li> \n\t                    <li><b>Please browse the comments while watching the video.</b> </li> \n\t                    <li>The video will begin to play as soon as you hit next. <b>Make sure your audio is on</b>, and that you are on a desktop computer. </li>\n\t                </ol>\n\t\t        <img src={screenshot} id=\"example\"/>\n\t\t    </div>\n                    <Link to=\"/video-comments\">\n                        <button class=\"button-second\">\n\t                     Next\n\t                </button>\n\t            </Link>\n                </div>\n            );\n\t} else {\n            return (\n                <div class=\"SecondInstructions\">\n\t\t    <h1>Video Instructions</h1>\n\t            <ol>\n\t\t            <li>The video you are about to watch is a clip from a previous Democratic debate with discussion around healthcare policy. The following candidates will speak in the video:<br/><img src={candidates} height=\"150px\"/> </li>\n\t                <li>The video will begin to play as soon as you hit next. <b>Make sure your audio is on</b>, and that you are on a desktop computer. </li>\n\t\t\t<li>You will be able to proceed to the comments section once the video has completed. You do not need to read every comment word-for-word, but please spend a few minutes reading through the comments.</li>\n\t            </ol>\n                    <Link to=\"/video\">\n                        <button class=\"button-second\">\n\t                    Next\n\t                </button>\n\t            </Link>\n                </div>\n\n\t    );\n\t}\n    }\n}\n\n","import React from 'react';\nimport {\n\tLink\n} from \"react-router-dom\";\nimport \"./video.css\";\nimport YouTube from \"react-youtube\";\n\nexport default class Video extends React.Component {\n    constructor(props) {\n        super(props);\n\tthis.state = {\n\t    video_start: 0,\n\t    complete: false\n\t};\n\tthis.addNext = this.addNext.bind(this);\n    }\n    \n    componentDidMount() {\n\tvar cur = new Date().getTime();\n        this.setState({video_start: cur});\n    }\n\n    addNext() {\n        this.setState({complete: true});\n    }\n\n    render() {\n        const videoOptions = {\n            playerVars: {\n                autoplay: 1,\n                controls: 0,\n                fs: 0,\n                modestbranding: 1,\n                start: 0,\n                end: 535\n            }\n        \n        }\n\tlet next_button;\n\tif (this.state.complete) {\n            next_button = <Link to=\"/comments\"><button class=\"button-video\"> Next </button></Link>\n\t} else {\n            next_button = <div></div>\n\t}\n        return (\n\t\t<div class=\"Video-alone\">\n\t            <YouTube videoId=\"tSgP7NIEhLU\" opts={videoOptions} onEnd={this.addNext}/>\n\t\t    {next_button}\n\t\t</div>\n        );\n    }\n}\n\n\n","import React from 'react';\nimport {\n\tLink\n} from \"react-router-dom\";\nimport \"./comments.css\";\nimport commentJSON from \"../../data/json/comments.json\";\nimport commentpoJSON from \"../../data/json/comments_PO.json\";\n\nexport default class Comments extends React.Component {\n    constructor(props) {\n        super(props);\n\tvar comJSON = commentJSON;\n\tif (this.props.bias == 1) {\n            comJSON = commentpoJSON;\n\t}\n\tthis.state = {\n\t    comments: comJSON[\"entries\"],\n\t};\n    }\n    \n    addNext() {\n        this.setState({complete: true});\n    }\n\n    render() {\n\tlet next_button;\n        next_button = <Link to=\"/post-survey\"><button class=\"button-comments\"> Next </button></Link>;\n        return (\n\t\t<div>\n\t            <div class=\"CommentsAsync\">\n\t\t        {this.state.comments.map(comment => <CommentAsync\n\t\t\t    key={this.state.index - this.state.comments.indexOf(comment)}\n                            user={comment[\"user\"]}\n\t\t\t    text={comment[\"text\"]}/>)\n\t\t\t}\n                    </div>\n\t\t    {next_button}\n\t\t</div>\n        );\n    }\n}\n\n\n\nclass CommentAsync extends React.Component {\n    render() {\n        return (\n            <div class=\"comment_async\">\n\t\t<div class=\"user_async\">{this.props.user}</div>\n\t\t<div class=\"comment_text_async\">{this.props.text}</div>\n\t    </div>\n\t)\n    }\n\n\n}\n\n","import React from 'react';\nimport {\n\tLink\n} from \"react-router-dom\";\nimport \"./video-comments.css\";\nimport YouTube from \"react-youtube\";\nimport commentJSON from \"../../data/json/comments.json\";\nimport commentpoJSON from \"../../data/json/comments_PO.json\";\n\nexport default class VideoComments extends React.Component {\n    constructor(props) {\n        super(props);\n\tvar comJSON;\n\tif (this.props.bias == 0) {\n            comJSON = commentJSON;\n\t} else {\n            comJSON = commentpoJSON;\n\t}\n\tthis.state = {\n\t    video_start: 0,\n\t    index: 0,\n\t    comments: [],\n\t    comJSON: comJSON,\n\t    complete: false\n\t};\n\tthis.filterJSON = this.filterJSON.bind(this);\n\tthis.addComments = this.addComments.bind(this);\n\tthis.addAndReturn = this.addAndReturn.bind(this);\n\tthis.addNext = this.addNext.bind(this);\n\tvar y = 0;\n        var intervalID = setInterval(\n\t\t() => {\n                    this.addComments();\n                    if (++y == 133) {\n                        clearInterval(intervalID);\n\t            }\n\t        }, 5000);\n    }\n    \n    componentDidMount() {\n\tvar cur = new Date().getTime();\n        this.setState({video_start: cur});\n    }\n\n    filterJSON(to_filter, video_start) {\n        var new_comments = [];\n\tvar i;\n        for (i = this.state.index; i < to_filter[\"entries\"].length; i++) {\n            var comment = to_filter[\"entries\"][i];\n\t    var cur_time = new Date().getTime();\n            if ((cur_time - video_start) >= comment[\"activation_time\"]) {\n\t        new_comments.unshift(comment);\n            } else {\n                break;\n            }\n        }\n\tthis.setState({index: i});\n\treturn new_comments;\n    }\n\n    addComments() {\n        var new_comments = this.filterJSON(this.state.comJSON, this.state.video_start);\n\tthis.setState({comments: new_comments.concat(this.state.comments)});\n    }\n    \n    addAndReturn(dict, key, val) {\n        dict[key] = val;\n\treturn dict;\n    }\n\n    addNext() {\n        this.setState({complete: true});\n    }\n\n    render() {\n        const videoOptions = {\n\t    position: \"absolute\",\n\t    height: \"665px\",\n\t    width: \"100% !important\",\n            playerVars: {\n                autoplay: 1,\n                controls: 0,\n                fs: 0,\n                modestbranding: 1,\n                start: 0,\n                end: 535\n            }\n        \n        }\n\tlet next_button;\n\tif (this.state.complete) {\n            next_button = <Link to=\"/post-survey\"><button class=\"button-vc\"> Next </button></Link>\n\t} else {\n            next_button = <div></div>\n\t}\n        return (\n            <div>\n    \t        <div class=\"Wrapper\">\n\t\t    <div class=\"Video\">\n\t          \t<YouTube videoId=\"tSgP7NIEhLU\" opts={videoOptions} onEnd={this.addNext}/>\n\t\t    </div>\n\t\t    <button class=\"refresh\" onClick={this.addComments}>\n\t\t        Refresh comments\n\t\t    </button>\n\t            <div class=\"SyncComments\">\n\t\t        {this.state.comments.map(comment => <Comment\n\t\t\t    key={this.state.index - this.state.comments.indexOf(comment)}\n                            user={comment[\"user\"]}\n\t\t\t    text={comment[\"text\"]}\n\t\t\t    activation_time={comment[\"activation_time\"]}\n\t\t\t    video_start={this.state.video_start}/>)\n\t\t\t}\n                    </div>\n\t\t    \n\t        </div>\n\t\t    {next_button}\n\t    </div>\n        );\n    }\n}\n\n\n\nclass Comment extends React.Component {\n    constructor(props) {\n        super(props);\n\tthis.state = {\n            cur: new Date().getTime()\n\t};\n\tvar x = 0;\n        var intervalID = setInterval(\n\t\t() => {\n                    this.setState({cur: new Date().getTime()});\n                    if (++x == 10) {\n                        clearInterval(intervalID);\n\t            }\n\t        }, 60000);\n    }\n    render() {\n\tvar diff_ms = this.state.cur - this.props.video_start - this.props.activation_time;\n\tvar diff_min = Math.round(((diff_ms % 86400000) % 3600000) / 60000);\n        return (\n            <div class=\"comment\">\n\t\t<div class=\"user\">{this.props.user}</div>\n\t\t<div class=\"time_since\">{diff_min} minutes ago</div>\n\t\t<div class=\"comment_text\">{this.props.text}</div>\n\t    </div>\n\t)\n    }\n\n\n}\n\n","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport \"./post-survey.css\"\nexport default class Postsurvey extends React.Component {\n    constructor(props) {\n        super(props);\n\t    this.state = {\n\t        passcode : \"\"\n\t    }\n\t    this.handlePassCode = this.handlePassCode.bind(this);\n    }\n    \n    handlePassCode(event) {\n        this.setState({ passcode : event.target.value });\n    }\n    render() {\n\t    var where=\"S\";\n\t    var bias=\"M\";\n        if (this.props.mode == 1) {\n            where=\"D\"\n\t    }\n\t    if (this.props.bias == 1) {\n            bias=\"P\"\n\t    }\n        return (\n            <div class=\"Postsurvey\">\n                <iframe src={\"https://illinoisaces.co1.qualtrics.com/jfe/form/SV_6tWB2UCM7OLmYOp?where=\"+where+\"&bias=\"+bias} width=\"100%\" height=\"100%\"></iframe>\n\t\t        <h2>Please complete the survey in the box above to receive your second passcode. Enter the passcode in the box below to proceed.</h2>\n\t\t        <label for=\"passcode_entry2\">Second Passcode: </label>\n\t\t        <input type=\"text\" id=\"passcode_entry2\" onChange={this.handlePassCode}/>  \n\t\t        { (this.state.passcode.trim() == \"4311\") ?\n\t                <Link to=\"/end-slide\">\n                        <button class=\"button-post\">\n\t                        Next\n\t                    </button>\n\t                </Link> : <div/>\n\t            }\n            </div>\n\t    );\n      }\n}\n\n","import React from 'react';\nimport \"./end-slide.css\"\n\nexport default function EndSlide() {\n    return (\n        <div class=\"EndSlide\">\n\t    <h1> Please enter the following completion code in Prolific: 81231449</h1>\n            <h2>Dual Screen Bias Debrief Form</h2>\n            <p>Thank you for participating in this study!  We hope you enjoyed the experience.  This form provides background about our research to help you learn more about why we are doing this study. Please feel free to ask any questions or to comment on any aspect of the study.</p>\n            <p>You have just participated in a research study conducted by Karrie Karahalios and Vinay Koshy at the University of Illinois at Urbana Champaign.</p>\n            <p>This experiment was designed to understand how media multitasking affects people's understanding of political issues. Each participant was either shown the debate and comments one at a time, or asked to watch the debate and read comments at the same time. A past study found that around 20% of debate watchers report that they engage with social media while watching the debate. We believe that when forced to divide their attention between two things, people with strong prior beliefs will display bias in what they actually remember from the debate. Similarly, we hypothesize that comments can have a priming effect on participants, and making them more or less likely to believe an argument depending on when they see the comment.</p>\n            <p>You may have noticed our initial description of our research goals are not the same as described here. This was intentional, as a participant who is aware that this study is about bias, may make a more conscious effort to remain neutral throughout the study. Once again, your participation is wholly voluntary. If you so wish, you may ask to have your results withdrawn after reading this form. You will still receive payment even if you choose to do so, and all records of your participation will be destroyed. Please email vkoshy2@illinois.edu if you'd like to do so. You make keep, or download a copy of this debriefing form for your records.</p>\n            <h2>This concludes the study. Thanks you for participating! Once again, please direct any questions or concerns you may have to vkoshy2@illinois.edu</h2>\n        </div>\n  );\n}\n\n","import React from 'react';\nimport './App.css';\nimport Consent from \"./components/consent/consent.js\";\nimport Instructions from \"./components/instructions/instructions.js\";\nimport Presurvey from \"./components/pre-survey/pre-survey.js\";\nimport SecondInstructions from \"./components/second-instructions/second-instructions.js\";\nimport Video from \"./components/video/video.js\";\nimport Comments from \"./components/comments/comments.js\";\nimport VideoComments from \"./components/video-comments/video-comments.js\";\nimport Postsurvey from \"./components/post-survey/post-survey.js\";\nimport EndSlide from \"./components/end-slide/end-slide.js\";\nimport {\n    HashRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\n\nexport default class App extends React.Component {\n    //mode: 0 = Single screen, 1 = Dual screen\n    //bias: 0 = M4A, 1 = PO\n    constructor(props) {\n        super(props);\n\tthis.state = {\n            mode: 0,\n\t    bias: 0\t\n\t};\n    }\n    componentDidMount() {\n\tvar attempt = sessionStorage.getItem(\"mode\");\n\tif (attempt == null) {\n\t     attempt = Math.round(Math.random());\n\t     sessionStorage.setItem(\"mode\", attempt);\n\t}\n        this.setState({mode: attempt});\n\tvar attempt_bias = sessionStorage.getItem(\"bias\");\n\tif (attempt_bias == null) {\n\t     attempt_bias = Math.round(Math.random());\n\t     sessionStorage.setItem(\"bias\", attempt_bias);\n\t}\n        this.setState({bias: attempt_bias});\n    }\n    render() {\n        return (\n            <Router>\n\t        <Switch>\n\t            <Route exact path=\"/\">\n                        <Consent mode/>\n\t            </Route>\n\t            <Route exact path=\"/instructions\">\n\t                <Instructions mode={this.state.mode} />\n\t            </Route>\n\t            <Route exact path=\"/pre-survey\">\n\t                <Presurvey mode={this.state.mode} bias={this.state.bias}/>\n\t            </Route>\n\t\t    <Route exact path=\"/second-instructions\">\n\t\t        <SecondInstructions mode={this.state.mode}/>\n\t\t    </Route>\n\t            <Route exact path=\"/video-comments\">\n\t                <VideoComments bias={this.state.bias}/>\n\t            </Route>\n\t\t    <Route exact path=\"/video\">\n\t\t        <Video />\n\t\t    </Route>\n\t\t    <Route exact path=\"/comments\">\n\t\t\t<Comments bias={this.state.bias}/>\n\t\t    </Route>\n\t            <Route exact path=\"/post-survey\">\n\t                <Postsurvey mode={this.state.mode} bias={this.state.bias}/>\n\t\t    </Route>\n\t\t    <Route exact path=\"/end-slide\">\n\t\t        <EndSlide />\n\t\t    </Route>\n\t    </Switch>\n        </Router>\n      );\n    }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}